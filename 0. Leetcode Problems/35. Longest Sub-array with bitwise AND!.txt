You are given an array of integers(ARR) and Q queries.

Query Type-> X: Find the largest index IND such that ARR[1] & ARR[2] & â€¦...ARR[IND] >=X 
For each query, your task is to find out the largest index IND such that the bitwise and of elements in the array ARR from index 1 to IND is greater than equal to X.

Example:-
ARR = [3,7,9,16]
Q = 2
Query 1-> 2 
Query 2-> 3
Answer for the first query is 2. (3 & 7 = 3 >= 2).
Answer for the second query is 3 (3 & 7 & 9 >= 1).


Sample Input 1 :
1
4 2
3 7 9 16
2
1
Sample Output 1 :
2
3
Explanation for Sample Output 1 :
In the first test case, the answer to the first query is 2 as 3 & 7 is 3 which is greater equal to 2. The answer to the second query is 3 as 3 & 7 & 9 is 1 which is greater equal to 1.
Sample Input 2 :
1
3 1
1 2 3
10
Sample Output 2 :
0

----------code---------
#include <bits/stdc++.h> 
vector<int> bitwiseAnd(int n, int q, vector<int> arr, vector<int> queries)
{    
    vector<int> v(n, 0), V(q, 0);    
    v[0] = arr[0];
    int band = arr[0];
    for(int i = 1; i < n; i++) {
        band = band & arr[i];
        v[i] = band;
    }    
    int k = 0;
    for(int i : queries) {
        for(int j = 0; j < n; j++) {
            if(v[j] >= i) {
                V[k] = j + 1;                
            }
        }
        k++;
    }    
    return V;
}