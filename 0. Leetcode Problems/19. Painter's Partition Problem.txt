https : // www.naukri.com/code360/problems/painter's-partition-problem_1089557

bool possible(vector<int> &boards, int k, int mid)
{
	int lengthSoFar = 0, painter = 1;
	for (int i = 0; i < boards.size(); i++)
	{
		if (lengthSoFar + boards[i] <= mid)
		{
			lengthSoFar += boards[i];
		}
		else
		{
			painter++;
			if (boards[i] > mid || painter > k)
			{
				return false;
			}
			//   cout << lengthSoFar << " ";
			lengthSoFar = boards[i];
		}
		if (painter > k)
		{
			return false;
		}
	}
	return true;
}

int findLargestMinDistance(vector<int> &boards, int k)
{
	// Write your code here.
	int sum = 0, maxi = 0;
	for (int i : boards)
	{
		sum += i;
		maxi = (i >= maxi) ? i : maxi;
	}
	if (boards.size() == k)
	{
		return maxi;
	}
	int start = 0, end = sum, mid, ans = 0;
	//   cout << sum << endl;
	while (start <= end)
	{
		mid = (start + end) / 2;
		// cout << mid << endl;

		if (possible(boards, k, mid))
		{
			// ans = max(ans, maxsofar);
			ans = mid;
			end = mid - 1;
		}
		else
		{
			start = mid + 1;
		}
	}
	return ans;
}