https://leetcode.com/problems/search-a-2d-matrix/

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int start = 0, end = matrix.size() - 1, rmid, cmid;
        while(start <= end) {
            rmid = (start + end) / 2;
            // cout << start << " " << end << " " << rmid << endl;            
            if(matrix[rmid][0] == target) {
                return true;
            }
            else if(matrix[rmid][0] < target) {    
                if(rmid + 1 < matrix.size() - 1) {
                    if(matrix[rmid + 1][0] > target) {
                        break;
                    }                    
                }            
                start = rmid + 1;                
            }
            else if(matrix[rmid][0] > target) {
                if(rmid - 1 >= 0) {
                    if(matrix[rmid - 1][0] < target) {
                        rmid--;
                        break;
                    }
                }
                end = rmid - 1;
            }
            else{
                break;
            }
        }
        
        start = 0, end = matrix[0].size() - 1;        
        while(start <= end) {
            cmid = (start + end) / 2;
            if(matrix[rmid][cmid] == target) {
                return true;
            }
            else if(matrix[rmid][cmid] < target) {
                start = cmid + 1;
            }
            else {
                end = cmid - 1;
            }
        }
        return false;
    }
};