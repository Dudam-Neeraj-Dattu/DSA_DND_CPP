https://leetcode.com/problems/house-robber-ii

class Solution {
public:

    int solve(vector<int> &nums, int index, vector<int> &dp) {
        if(index >= nums.size()) {
            return 0;
        } 
        if(dp[index] != -1) {return dp[index];}
        dp[index] = max(solve(nums, index + 1, dp), nums[index] + solve(nums, index + 2, dp));
        return dp[index];
    }

    int rob(vector<int>& nums) {        
        if(nums.size() == 1) {return nums[0];}
        vector<int> dp1(nums.size() - 1, -1), dp2(nums.size() - 1, -1);
        vector<int> nums1, nums2;
        for(int i = 0; i < nums.size(); i++) {
            if(i != 0) {
                nums1.push_back(nums[i]);
            }
            if(i != nums.size() - 1) {
                nums2.push_back(nums[i]);
            }
            
        }
        return max(solve(nums1, 0, dp1), solve(nums2, 0, dp2));        
    }
};