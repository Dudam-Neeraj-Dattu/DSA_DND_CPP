https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> v;
        if (root == NULL) {
            return v;
        }        
        queue<TreeNode*> q;
        int level = 0;
        q.push(root);
        q.push(NULL);
        while (q.size() != 1) {
            vector<int> vv;
            while (q.front() != NULL) {
                if(q.front() -> left) {
                    q.push(q.front()->left);
                }                
                if(q.front() -> right) {
                    q.push(q.front()->right);
                }                                
                vv.push_back(q.front()->val);                
                q.pop();
            }
            if (level % 2 == 0) {
                v.push_back(vv);
            } 
            else {
                reverse(vv.begin(), vv.end());
                v.push_back(vv);
            }
            while(q.front() == NULL) {
                q.pop();                
            }           
            q.push(NULL); 
            level++;
        }
        return v;
    }
};