https://leetcode.com/problems/binary-tree-level-order-traversal/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void maxlevel(TreeNode *root, int level, int &maxilevel) {

        if(root == NULL) {
            return;
        }

        maxilevel = max(level, maxilevel);

        maxlevel(root -> left, level + 1, maxilevel);

        maxlevel(root -> right, level + 1, maxilevel);
    }

    void solve(vector<vector<int>> &v, TreeNode* root, int level) {
        if(root == NULL) {
            return;
        }

        v[level].push_back(root -> val);

        solve(v, root -> left, level + 1);

        solve(v, root -> right, level + 1);
    }

    vector<vector<int>> levelOrder(TreeNode* root) {
        int maxilevel = INT_MIN;
        maxlevel(root, 0, maxilevel);
        vector<vector<int>> v;
        for(int i = 0; i <= maxilevel; i++) {
            vector<int> vv;
            v.push_back(vv);
        }
        solve(v, root, 0);
        return v;
    }
};