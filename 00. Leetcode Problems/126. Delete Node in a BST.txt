https://leetcode.com/problems/delete-node-in-a-bst/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    int minVal(TreeNode *root) {
        if(root -> left == NULL) {
            return root -> val;
        }

        return minVal(root -> left);
    }

    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root == NULL) {
            return NULL;
        }

        if(root -> val == key) {

            if(root -> left == NULL && root -> right == NULL) {
                return NULL;
            }

            else if(root -> left == NULL && root -> right != NULL) {
                return root -> right;
            }

            else if(root -> left != NULL && root -> right == NULL) {
                return root -> left;
            }

            else if(root -> left != NULL && root -> right != NULL) {
                int mini = minVal(root -> right);
                root -> val = mini;
                root -> right = deleteNode(root -> right, mini);
                return root;
            }
        }
        else if(root -> val < key) {
            root -> right = deleteNode(root -> right, key);
            return root;
        }

        else {
            root -> left = deleteNode(root -> left, key);
            return root;
        }
        return root;
    }
};