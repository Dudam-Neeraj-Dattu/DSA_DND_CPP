https://leetcode.com/problems/sliding-window-maximum/description/

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if(k == 1) {
            return nums;
        }
        vector<int> v;
        deque<int> maxi;
        for(int i = 0; i < k; i++) {
            while(!maxi.empty() && nums[maxi.back()] <= nums[i]) {
                maxi.pop_back();
            }
            maxi.push_back(i);
        }
        v.push_back(nums[maxi.front()]);
        for(int i = k; i < nums.size(); i++) {
            while(!maxi.empty() && i - maxi.front() >= k) {
                maxi.pop_front();
            }
            while(!maxi.empty() && nums[maxi.back()] <= nums[i]) {
                maxi.pop_back();
            }
            maxi.push_back(i);
            v.push_back(nums[maxi.front()]);
        }
        return v;
    }
};