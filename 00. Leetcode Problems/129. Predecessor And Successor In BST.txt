https://www.naukri.com/code360/problems/_893049

void inorder(TreeNode *root, vector<int> &v) {
  if (root == NULL) {
    return;
  }

  inorder(root->left, v);
  v.push_back(root->data);
  inorder(root->right, v);
}

pair<int, int> predecessorSuccessor(TreeNode *root, int key) {
  // Write your code here.
  vector<int> v;
  inorder(root, v);
  pair<int, int> p = make_pair(v[v.size() - 1], -1);
  for (int i = 0; i < v.size(); i++) {
    if (v[i] >= key) {
      if (v[i] == key) {
        if (i == 0) {
          p.first = -1;
          p.second = v[i + 1];
        } else if (i == v.size() - 1) {
          p.first = v[i - 1];
          p.second = -1;
        } else {
          p.first = v[i - 1];
          p.second = v[i + 1];
        }
      } else {
        if (i == 0) {
          p.first = -1;
          p.second = v[i];
        } 
        else {
          p.first = v[i - 1];
          p.second = v[i];
        }
      }

      return p;
    }
  }
  return p;
}