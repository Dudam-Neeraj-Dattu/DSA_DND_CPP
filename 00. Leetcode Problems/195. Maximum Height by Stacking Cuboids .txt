https://leetcode.com/problems/maximum-height-by-stacking-cuboids

class Solution {
public:
    bool check(vector<int> &base, vector<int> &newBox) {
        return (newBox[0] <= base[0] && newBox[1] <= base[1] && newBox[2] <= base[2]);
    }

    int solve(vector<vector<int>>& arr) {
        int n = arr.size();
        vector<int> current(n + 1, 0), next(n + 1, 0);
        for (int curr = n - 1; curr >= 0; curr--) {
            for (int prev = curr - 1; prev >= -1; prev--) {
                int notTake = 0, take = 0;
                if (prev == -1 || check(arr[curr], arr[prev])) {
                    take = arr[curr][2] + next[curr + 1];
                }
                notTake = next[prev + 1];

                current[prev + 1] = max(take, notTake);
            }
            next = current;
        }

        return next[0];
    }
    int maxHeight(vector<vector<int>>& cuboids) {
        for(auto &a : cuboids) {
            sort(a.begin(), a.end());
        }
        sort(cuboids.begin(), cuboids.end());
        return solve(cuboids);
    }
};