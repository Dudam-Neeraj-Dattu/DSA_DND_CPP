https://www.geeksforgeeks.org/problems/distance-from-the-source-bellman-ford-algorithm/1

// User function Template for C++

class Solution {
  public:
    /*  Function to implement Bellman Ford
     *   edges: vector of vectors which represents the graph
     *   S: source vertex to start traversing graph with
     *   V: number of vertices
     */
    vector<int> bellmanFord(int v, vector<vector<int>>& edges, int src) {
        // Code here
        vector<int> dist(v, 1e8);
        dist[src] = 0;
        vector<int> ans(1, -1);
        for(int i = 2; i <= v; i++) {
            for(int j = 0; j < edges.size(); j++) {
                int u = edges[j][0];
                int v = edges[j][1];
                int w = edges[j][2];
                if(dist[u] != 1e8 && ((dist[u] + w) < dist[v])) {
                    dist[v] = dist[u] + w;
                }
            }
        }
        for(int j = 0; j < edges.size(); j++) {
                int u = edges[j][0];
                int v = edges[j][1];
                int w = edges[j][2];
                if(dist[u] != 1e8 && ((dist[u] + w) < dist[v])) {
                    return ans;
                }
            }
        return dist;
    }
};
