https://leetcode.com/problems/combination-sum-iv

-------recursive----
class Solution {
public:
    void solve(vector<int>& nums, int target, int &ans, int sum) {
        if(sum >= target) {
            if(sum == target) {
                ans++;
            }            
            return;
        }
        for(int i = 0; i < nums.size(); i++) {
            solve(nums, target, ans, sum + nums[i]);
        }
    }
    int combinationSum4(vector<int>& nums, int target) {
        int ans = 0, sum = 0;
        solve(nums, target, ans, sum);
        return ans;
    }
};

-------memoisation--------
class Solution {
public:
    int solve(vector<int>& nums, int target, vector<int> &dp) {
        if (target == 0) return 1;
        if (target < 0) return 0;
        if(dp[target] != -1) {
            return dp[target];
        }
        int count = 0;
        for(int i = 0; i < nums.size(); i++) {
            count += solve(nums, target - nums[i], dp);
        }
        dp[target] = count;
        return dp[target];
    }
    int combinationSum4(vector<int>& nums, int target) {
        vector<int> dp(target + 1, -1);
        return solve(nums, target, dp);        
    }
};

-----------tabulation-------
