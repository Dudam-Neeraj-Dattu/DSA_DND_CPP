https://leetcode.com/problems/best-time-to-buy-and-sell-stock

-----brute----------
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int ans = 0;
        int n = prices.size();        
        for(int i = 0; i < n - 1; i++) {
            for(int j = i + 1; j < n; j++) {
                ans = max(ans, prices[j] - prices[i]);
            }
        }
        return ans;
    }
};

------space optimised----
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size();        
        int ans = 0;
        int maxFromHere = prices[n - 1];        
        for(int i = n - 2; i >= 0; i--) {
            ans = max(ans, maxFromHere - prices[i]);
            if(prices[i] > maxFromHere) {
                maxFromHere = prices[i];
            }
        }
        return ans;
    }
};
