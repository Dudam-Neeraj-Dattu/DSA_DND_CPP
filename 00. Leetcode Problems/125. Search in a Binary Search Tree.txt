https://leetcode.com/problems/search-in-a-binary-search-tree/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void search(TreeNode *root, int val, TreeNode *&found) {
        if(root == NULL) {
            return;
        }

        if(root -> val < val) {
            search(root -> right, val, found);
        }

        else if(root -> val > val) {
            search(root -> left, val, found);
        }

        else {
            found = root;
            return;
        }
    }

    TreeNode* searchBST(TreeNode* root, int val) {
        TreeNode *found = NULL;
        search(root, val, found);
        return found;
    }
};
